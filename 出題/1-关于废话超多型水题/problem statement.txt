我们都知道FFT可以用来计算图像卷积，然而FFT需要带浮点的复数运算。如果我们采用整数代替FFT中的Wn=exp{-j*2Pi/n}进行模幂运算，是否能获得常数更小的算法呢？
答案是肯定的。数论转换NTT采用整数α代替Wn进行计算（称为初始因子），并将和式对P取模。为了保证快速算法可行，(α^n)%P必须为1。同时为了保证结果可逆，模数P必须是素数，且对任何x<n，(α^x%P)!=1。这就要求P必须是形如(y*2^k+1)的素数，此时n最大可以取到2^k。
综合以上条件，我们可以发现P的原根可以直接满足初始因子的条件。对任何数M，M的原根x是满足x^1%M,x^2%M,...,x^(M-1)%M不重不漏地取遍1,2,...,(M-1)的数。并不是每个数都有原根，然而幸运的是，任何质数都存在至少一个原根。
通常数的原根都很小，因此我们常常采用枚举法计算素数P的最小原根x。枚举x的过程中显然我们不能直接遍历1..(P-1)，计算x的幂模P是否是取遍所有值。实际上，我们可以证明以下结论：
如果对(P-1)的所有质因子y，有x^((P-1)/y)%P>1，那么x是P的原根。反之亦然。
于是现在我们给定若干个P，希望找到最小的初始因子α，来进行FNTT计算。
提示：64位无符号整数数据类型是unsigned long long，输入输出用%llu，常量书写形如0ull和~(1ull)。